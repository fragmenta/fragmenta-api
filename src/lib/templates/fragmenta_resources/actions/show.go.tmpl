package [[ .fragmenta_resource ]]actions

import (
	"github.com/fragmenta/auth/can"
	"github.com/fragmenta/router"
	"github.com/fragmenta/view"

	"github.com/fragmenta/fragmenta-app/src/lib/auth"
	"github.com/fragmenta/fragmenta-app/src/[[ .fragmenta_resources ]]"
)

// HandleShow displays a single [[ .fragmenta_resource ]].
func HandleShow(context router.Context) error {

	// Find the [[ .fragmenta_resource ]]
	[[ .fragmenta_resource ]], err := [[ .fragmenta_resources ]].Find(context.ParamInt("id"))
	if err != nil {
		return router.NotFoundError(err)
	}

	// Authorise access
	err = can.Show([[ .fragmenta_resource ]], auth.CurrentUser(context))
	if err != nil {
		return router.NotAuthorizedError(err)
	}

	// Render the template
	view := view.New(context)
	view.AddKey("[[ .fragmenta_resource ]]", [[ .fragmenta_resource ]])
	return view.Render()
}
